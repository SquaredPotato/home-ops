---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: production
  namespace: database
  annotations:
    kyverno.io/ignore: "true"
spec:
  instances: 3
  imageName: ghcr.io/tensorchord/cloudnative-vectorchord:17.5-0.3.0
  enableSuperuserAccess: true
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: local-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  affinity:
    nodeSelector:
      nodeType: "pi"
    tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
#  bootstrap:
#    recovery:
#      source: &previousCluster "production-v0"
  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 512MB
    shared_preload_libraries:
      - "vchord.so"
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 3d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://postgres-cloudnative.mizuto.backup/
      endpointURL: https://s3.eu-central-1.wasabisys.com
      serverName: &currentCluster production-v1
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: wasabi-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: wasabi-key
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
#  externalClusters:
#   - name: *previousCluster
#     barmanObjectStore:
#       wal:
#         compression: bzip2
#         maxParallel: 8
#       destinationPath: s3://postgres-cloudnative.mizuto.backup/
#       endpointURL: https://s3.eu-central-1.wasabisys.com
#       s3Credentials:
#         accessKeyId:
#           name: cloudnative-pg-secret
#           key: wasabi-id
#         secretAccessKey:
#           name: cloudnative-pg-secret
#           key: wasabi-key
