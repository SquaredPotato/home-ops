---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: pgadmin
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      pgadmin:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          volume-permissions:
            image:
              repository: dpage/pgadmin4
              tag: "9.6"
            command: [ "/bin/chown", "-R", "5050:5050", "/var/lib/pgadmin" ]
            securityContext:
              runAsUser: 0
        containers:
          app:
            image:
              repository: dpage/pgadmin4
              tag: "9.6"
            env:
              TZ: Europe/Amsterdam
              PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /misc/ping
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              # Pgadmin wants to run things as root for some
              # GODFORSAKEN reason
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsUser: 5050
        runAsGroup: 5050
        fsGroup: 5050
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["pgops.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
        globalMounts:
          - path: /var/lib/pgadmin
            readOnly: false
      tmp:
        type: emptyDir
