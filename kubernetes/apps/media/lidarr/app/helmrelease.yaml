---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: lidarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      lidarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/lidarr
              tag: 3.0.0.4855@sha256:2f7f6ad08afa31d1822c93dfd31f1c8e9f9df0cb054784c7960f964819649808
            env:
              COMPlus_EnableDiagnostics: "0"
              LIDARR__AUTH__METHOD: External
              LIDARR__AUTH__REQUIRED: DisabledForLocalAddresses
              LIDARR__INSTANCE__NAME: "Lidarr"
              LIDARR__SERVER__PORT: &port 80
              LIDARR__LOG__LEVEL: info
              LIDARR__THEME: "dark"
              PUID: 101000
              PGID: 101000
              UMASK: 002
              TZ: "Europe/Amsterdam"
            envFrom:
              - secretRef:
                  name: lidarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 60
                  periodSeconds: 30
                  timeoutSeconds: 1
                  failureThreshold: 5
              readiness: *probes
            securityContext:
              runAsUser: 101000
              runAsGroup: 101000
              runAsNonRoot: true
              fsGroup: 101000
              fsGroupChangePolicy: OnRootMismatch
              supplementalGroups:
                - 10000
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    service:
      app:
        controller: lidarr
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    persistence:
      run:
        type: emptyDir
        globalMounts:
          - path: /run
      config:
        type: nfs
        server: "${LAN_TRUENAS_IP}"
        path: /mnt/MAIN/miscellaneous/config/lidarr
      media:
        type: nfs
        server: "${LAN_TRUENAS_IP}"
        path: /mnt/MAIN/media/
        globalMounts:
          - path: /mnt/general/
      music:
        type: nfs
        server: "${LAN_TRUENAS_IP}"
        path: /mnt/MAIN/miscellaneous/music
        globalMounts:
          - path: /mnt/general/music
